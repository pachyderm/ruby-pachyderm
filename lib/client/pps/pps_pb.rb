# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: client/pps/pps.proto

require 'google/protobuf'

require 'google/protobuf/empty_pb'
require 'google/protobuf/timestamp_pb'
require 'google/protobuf/duration_pb'
require 'client/pfs/pfs_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "pps.Secret" do
    optional :name, :string, 1
    optional :key, :string, 4
    optional :mount_path, :string, 2
    optional :env_var, :string, 3
  end
  add_message "pps.Transform" do
    optional :image, :string, 1
    repeated :cmd, :string, 2
    map :env, :string, :string, 3
    repeated :secrets, :message, 4, "pps.Secret"
    repeated :image_pull_secrets, :string, 9
    repeated :stdin, :string, 5
    repeated :accept_return_code, :int64, 6
    optional :debug, :bool, 7
    optional :user, :string, 10
    optional :working_dir, :string, 11
  end
  add_message "pps.Egress" do
    optional :URL, :string, 1
  end
  add_message "pps.Job" do
    optional :id, :string, 1
  end
  add_message "pps.Service" do
    optional :internal_port, :int32, 1
    optional :external_port, :int32, 2
    optional :ip, :string, 3
  end
  add_message "pps.AtomInput" do
    optional :name, :string, 1
    optional :repo, :string, 2
    optional :branch, :string, 3
    optional :commit, :string, 4
    optional :glob, :string, 5
    optional :lazy, :bool, 6
    optional :empty_files, :bool, 8
  end
  add_message "pps.CronInput" do
    optional :name, :string, 1
    optional :repo, :string, 2
    optional :commit, :string, 3
    optional :spec, :string, 4
    optional :start, :message, 5, "google.protobuf.Timestamp"
  end
  add_message "pps.GitInput" do
    optional :name, :string, 1
    optional :url, :string, 2
    optional :branch, :string, 3
    optional :commit, :string, 4
  end
  add_message "pps.Input" do
    optional :atom, :message, 1, "pps.AtomInput"
    repeated :cross, :message, 2, "pps.Input"
    repeated :union, :message, 3, "pps.Input"
    optional :cron, :message, 4, "pps.CronInput"
    optional :git, :message, 5, "pps.GitInput"
  end
  add_message "pps.JobInput" do
    optional :name, :string, 4
    optional :commit, :message, 1, "pfs.Commit"
    optional :glob, :string, 2
    optional :lazy, :bool, 3
  end
  add_message "pps.ParallelismSpec" do
    optional :constant, :uint64, 2
    optional :coefficient, :double, 3
  end
  add_message "pps.InputFile" do
    optional :path, :string, 4
    optional :hash, :bytes, 5
  end
  add_message "pps.Datum" do
    optional :id, :string, 1
    optional :job, :message, 2, "pps.Job"
  end
  add_message "pps.DatumInfo" do
    optional :datum, :message, 1, "pps.Datum"
    optional :state, :enum, 2, "pps.DatumState"
    optional :stats, :message, 3, "pps.ProcessStats"
    optional :pfs_state, :message, 4, "pfs.File"
    repeated :data, :message, 5, "pfs.FileInfo"
  end
  add_message "pps.Aggregate" do
    optional :count, :int64, 1
    optional :mean, :double, 2
    optional :stddev, :double, 3
    optional :fifth_percentile, :double, 4
    optional :ninety_fifth_percentile, :double, 5
  end
  add_message "pps.ProcessStats" do
    optional :download_time, :message, 1, "google.protobuf.Duration"
    optional :process_time, :message, 2, "google.protobuf.Duration"
    optional :upload_time, :message, 3, "google.protobuf.Duration"
    optional :download_bytes, :uint64, 4
    optional :upload_bytes, :uint64, 5
  end
  add_message "pps.AggregateProcessStats" do
    optional :download_time, :message, 1, "pps.Aggregate"
    optional :process_time, :message, 2, "pps.Aggregate"
    optional :upload_time, :message, 3, "pps.Aggregate"
    optional :download_bytes, :message, 4, "pps.Aggregate"
    optional :upload_bytes, :message, 5, "pps.Aggregate"
  end
  add_message "pps.WorkerStatus" do
    optional :worker_id, :string, 1
    optional :job_id, :string, 2
    repeated :data, :message, 3, "pps.InputFile"
    optional :started, :message, 4, "google.protobuf.Timestamp"
    optional :stats, :message, 5, "pps.ProcessStats"
    optional :queue_size, :int64, 6
  end
  add_message "pps.ResourceSpec" do
    optional :cpu, :float, 1
    optional :memory, :string, 2
    optional :gpu, :int64, 3
  end
  add_message "pps.EtcdJobInfo" do
    optional :job, :message, 1, "pps.Job"
    optional :pipeline, :message, 2, "pps.Pipeline"
    optional :output_commit, :message, 3, "pfs.Commit"
    optional :restart, :uint64, 4
    optional :data_processed, :int64, 5
    optional :data_skipped, :int64, 6
    optional :data_total, :int64, 7
    optional :data_failed, :int64, 8
    optional :stats, :message, 9, "pps.ProcessStats"
    optional :stats_commit, :message, 10, "pfs.Commit"
    optional :state, :enum, 11, "pps.JobState"
    optional :reason, :string, 12
  end
  add_message "pps.JobInfo" do
    optional :job, :message, 1, "pps.Job"
    optional :transform, :message, 2, "pps.Transform"
    optional :pipeline, :message, 3, "pps.Pipeline"
    optional :pipeline_version, :uint64, 13
    optional :parallelism_spec, :message, 12, "pps.ParallelismSpec"
    optional :egress, :message, 15, "pps.Egress"
    optional :parent_job, :message, 6, "pps.Job"
    optional :started, :message, 7, "google.protobuf.Timestamp"
    optional :finished, :message, 8, "google.protobuf.Timestamp"
    optional :output_commit, :message, 9, "pfs.Commit"
    optional :state, :enum, 10, "pps.JobState"
    optional :reason, :string, 35
    optional :service, :message, 14, "pps.Service"
    optional :output_repo, :message, 18, "pfs.Repo"
    optional :output_branch, :string, 17
    optional :restart, :uint64, 20
    optional :data_processed, :int64, 22
    optional :data_skipped, :int64, 30
    optional :data_failed, :int64, 40
    optional :data_total, :int64, 23
    optional :stats, :message, 31, "pps.ProcessStats"
    repeated :worker_status, :message, 24, "pps.WorkerStatus"
    optional :resource_requests, :message, 25, "pps.ResourceSpec"
    optional :resource_limits, :message, 36, "pps.ResourceSpec"
    optional :input, :message, 26, "pps.Input"
    optional :new_branch, :message, 27, "pfs.BranchInfo"
    optional :incremental, :bool, 28
    optional :stats_commit, :message, 29, "pfs.Commit"
    optional :enable_stats, :bool, 32
    optional :salt, :string, 33
    optional :batch, :bool, 34
    optional :chunk_spec, :message, 37, "pps.ChunkSpec"
    optional :datum_timeout, :message, 38, "google.protobuf.Duration"
    optional :job_timeout, :message, 39, "google.protobuf.Duration"
  end
  add_message "pps.Worker" do
    optional :name, :string, 1
    optional :state, :enum, 2, "pps.WorkerState"
  end
  add_message "pps.JobInfos" do
    repeated :job_info, :message, 1, "pps.JobInfo"
  end
  add_message "pps.Pipeline" do
    optional :name, :string, 1
  end
  add_message "pps.PipelineInput" do
    optional :name, :string, 5
    optional :repo, :message, 1, "pfs.Repo"
    optional :branch, :string, 2
    optional :glob, :string, 3
    optional :lazy, :bool, 4
    optional :from, :message, 6, "pfs.Commit"
  end
  add_message "pps.EtcdPipelineInfo" do
    optional :state, :enum, 1, "pps.PipelineState"
    optional :reason, :string, 4
    optional :spec_commit, :message, 2, "pfs.Commit"
    map :job_counts, :int32, :int32, 3
    optional :auth_token, :string, 5
  end
  add_message "pps.PipelineInfo" do
    optional :id, :string, 17
    optional :pipeline, :message, 1, "pps.Pipeline"
    optional :version, :uint64, 11
    optional :transform, :message, 2, "pps.Transform"
    optional :parallelism_spec, :message, 10, "pps.ParallelismSpec"
    optional :egress, :message, 15, "pps.Egress"
    optional :created_at, :message, 6, "google.protobuf.Timestamp"
    optional :state, :enum, 7, "pps.PipelineState"
    optional :recent_error, :string, 8
    map :job_counts, :int32, :int32, 9
    optional :output_branch, :string, 16
    optional :scale_down_threshold, :message, 18, "google.protobuf.Duration"
    optional :resource_requests, :message, 19, "pps.ResourceSpec"
    optional :resource_limits, :message, 31, "pps.ResourceSpec"
    optional :input, :message, 20, "pps.Input"
    optional :description, :string, 21
    optional :incremental, :bool, 22
    optional :cache_size, :string, 23
    optional :enable_stats, :bool, 24
    optional :salt, :string, 25
    optional :batch, :bool, 27
    optional :reason, :string, 28
    optional :max_queue_size, :int64, 29
    optional :service, :message, 30, "pps.Service"
    optional :chunk_spec, :message, 32, "pps.ChunkSpec"
    optional :datum_timeout, :message, 33, "google.protobuf.Duration"
    optional :job_timeout, :message, 34, "google.protobuf.Duration"
    optional :githook_url, :string, 35
    optional :spec_commit, :message, 36, "pfs.Commit"
    optional :standby, :bool, 37
  end
  add_message "pps.PipelineInfos" do
    repeated :pipeline_info, :message, 1, "pps.PipelineInfo"
  end
  add_message "pps.CreateJobRequest" do
    optional :pipeline, :message, 2, "pps.Pipeline"
    optional :output_commit, :message, 25, "pfs.Commit"
  end
  add_message "pps.InspectJobRequest" do
    optional :job, :message, 1, "pps.Job"
    optional :output_commit, :message, 3, "pfs.Commit"
    optional :block_state, :bool, 2
  end
  add_message "pps.ListJobRequest" do
    optional :pipeline, :message, 1, "pps.Pipeline"
    repeated :input_commit, :message, 2, "pfs.Commit"
    optional :output_commit, :message, 3, "pfs.Commit"
  end
  add_message "pps.FlushJobRequest" do
    repeated :commits, :message, 1, "pfs.Commit"
    repeated :to_pipelines, :message, 2, "pps.Pipeline"
  end
  add_message "pps.DeleteJobRequest" do
    optional :job, :message, 1, "pps.Job"
  end
  add_message "pps.StopJobRequest" do
    optional :job, :message, 1, "pps.Job"
  end
  add_message "pps.GetLogsRequest" do
    optional :pipeline, :message, 2, "pps.Pipeline"
    optional :job, :message, 1, "pps.Job"
    repeated :data_filters, :string, 3
    optional :datum, :message, 6, "pps.Datum"
    optional :master, :bool, 5
    optional :follow, :bool, 7
    optional :tail, :int64, 8
  end
  add_message "pps.LogMessage" do
    optional :pipeline_name, :string, 1
    optional :job_id, :string, 3
    optional :worker_id, :string, 7
    optional :datum_id, :string, 9
    optional :master, :bool, 10
    repeated :data, :message, 4, "pps.InputFile"
    optional :user, :bool, 8
    optional :ts, :message, 5, "google.protobuf.Timestamp"
    optional :message, :string, 6
  end
  add_message "pps.RestartDatumRequest" do
    optional :job, :message, 1, "pps.Job"
    repeated :data_filters, :string, 2
  end
  add_message "pps.InspectDatumRequest" do
    optional :datum, :message, 1, "pps.Datum"
  end
  add_message "pps.ListDatumRequest" do
    optional :job, :message, 1, "pps.Job"
    optional :page_size, :int64, 2
    optional :page, :int64, 3
  end
  add_message "pps.ListDatumResponse" do
    repeated :datum_infos, :message, 1, "pps.DatumInfo"
    optional :total_pages, :int64, 2
    optional :page, :int64, 3
  end
  add_message "pps.ListDatumStreamResponse" do
    optional :datum_info, :message, 1, "pps.DatumInfo"
    optional :total_pages, :int64, 2
    optional :page, :int64, 3
  end
  add_message "pps.ChunkSpec" do
    optional :number, :int64, 1
    optional :size_bytes, :int64, 2
  end
  add_message "pps.CreatePipelineRequest" do
    optional :pipeline, :message, 1, "pps.Pipeline"
    optional :transform, :message, 2, "pps.Transform"
    optional :parallelism_spec, :message, 7, "pps.ParallelismSpec"
    optional :egress, :message, 9, "pps.Egress"
    optional :update, :bool, 5
    optional :output_branch, :string, 10
    optional :scale_down_threshold, :message, 11, "google.protobuf.Duration"
    optional :resource_requests, :message, 12, "pps.ResourceSpec"
    optional :resource_limits, :message, 22, "pps.ResourceSpec"
    optional :input, :message, 13, "pps.Input"
    optional :description, :string, 14
    optional :incremental, :bool, 15
    optional :cache_size, :string, 16
    optional :enable_stats, :bool, 17
    optional :reprocess, :bool, 18
    optional :batch, :bool, 19
    optional :max_queue_size, :int64, 20
    optional :service, :message, 21, "pps.Service"
    optional :chunk_spec, :message, 23, "pps.ChunkSpec"
    optional :datum_timeout, :message, 24, "google.protobuf.Duration"
    optional :job_timeout, :message, 25, "google.protobuf.Duration"
    optional :salt, :string, 26
    optional :standby, :bool, 27
  end
  add_message "pps.InspectPipelineRequest" do
    optional :pipeline, :message, 1, "pps.Pipeline"
  end
  add_message "pps.ListPipelineRequest" do
  end
  add_message "pps.DeletePipelineRequest" do
    optional :pipeline, :message, 1, "pps.Pipeline"
    optional :all, :bool, 4
    optional :force, :bool, 5
  end
  add_message "pps.StartPipelineRequest" do
    optional :pipeline, :message, 1, "pps.Pipeline"
  end
  add_message "pps.StopPipelineRequest" do
    optional :pipeline, :message, 1, "pps.Pipeline"
  end
  add_message "pps.RerunPipelineRequest" do
    optional :pipeline, :message, 1, "pps.Pipeline"
    repeated :exclude, :message, 2, "pfs.Commit"
    repeated :include, :message, 3, "pfs.Commit"
  end
  add_message "pps.GarbageCollectRequest" do
  end
  add_message "pps.GarbageCollectResponse" do
  end
  add_message "pps.ActivateAuthRequest" do
  end
  add_message "pps.ActivateAuthResponse" do
  end
  add_enum "pps.JobState" do
    value :JOB_STARTING, 0
    value :JOB_RUNNING, 1
    value :JOB_FAILURE, 2
    value :JOB_SUCCESS, 3
    value :JOB_KILLED, 4
  end
  add_enum "pps.DatumState" do
    value :FAILED, 0
    value :SUCCESS, 1
    value :SKIPPED, 2
    value :STARTING, 3
  end
  add_enum "pps.WorkerState" do
    value :POD_RUNNING, 0
    value :POD_SUCCESS, 1
    value :POD_FAILED, 2
  end
  add_enum "pps.PipelineState" do
    value :PIPELINE_STARTING, 0
    value :PIPELINE_RUNNING, 1
    value :PIPELINE_RESTARTING, 2
    value :PIPELINE_FAILURE, 3
    value :PIPELINE_PAUSED, 4
    value :PIPELINE_STANDBY, 5
  end
end

module Pachyderm
module Pps
  Secret = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.Secret").msgclass
  Transform = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.Transform").msgclass
  Egress = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.Egress").msgclass
  Job = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.Job").msgclass
  Service = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.Service").msgclass
  AtomInput = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.AtomInput").msgclass
  CronInput = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.CronInput").msgclass
  GitInput = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.GitInput").msgclass
  Input = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.Input").msgclass
  JobInput = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.JobInput").msgclass
  ParallelismSpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ParallelismSpec").msgclass
  InputFile = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.InputFile").msgclass
  Datum = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.Datum").msgclass
  DatumInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.DatumInfo").msgclass
  Aggregate = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.Aggregate").msgclass
  ProcessStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ProcessStats").msgclass
  AggregateProcessStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.AggregateProcessStats").msgclass
  WorkerStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.WorkerStatus").msgclass
  ResourceSpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ResourceSpec").msgclass
  EtcdJobInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.EtcdJobInfo").msgclass
  JobInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.JobInfo").msgclass
  Worker = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.Worker").msgclass
  JobInfos = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.JobInfos").msgclass
  Pipeline = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.Pipeline").msgclass
  PipelineInput = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.PipelineInput").msgclass
  EtcdPipelineInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.EtcdPipelineInfo").msgclass
  PipelineInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.PipelineInfo").msgclass
  PipelineInfos = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.PipelineInfos").msgclass
  CreateJobRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.CreateJobRequest").msgclass
  InspectJobRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.InspectJobRequest").msgclass
  ListJobRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ListJobRequest").msgclass
  FlushJobRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.FlushJobRequest").msgclass
  DeleteJobRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.DeleteJobRequest").msgclass
  StopJobRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.StopJobRequest").msgclass
  GetLogsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.GetLogsRequest").msgclass
  LogMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.LogMessage").msgclass
  RestartDatumRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.RestartDatumRequest").msgclass
  InspectDatumRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.InspectDatumRequest").msgclass
  ListDatumRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ListDatumRequest").msgclass
  ListDatumResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ListDatumResponse").msgclass
  ListDatumStreamResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ListDatumStreamResponse").msgclass
  ChunkSpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ChunkSpec").msgclass
  CreatePipelineRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.CreatePipelineRequest").msgclass
  InspectPipelineRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.InspectPipelineRequest").msgclass
  ListPipelineRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ListPipelineRequest").msgclass
  DeletePipelineRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.DeletePipelineRequest").msgclass
  StartPipelineRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.StartPipelineRequest").msgclass
  StopPipelineRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.StopPipelineRequest").msgclass
  RerunPipelineRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.RerunPipelineRequest").msgclass
  GarbageCollectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.GarbageCollectRequest").msgclass
  GarbageCollectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.GarbageCollectResponse").msgclass
  ActivateAuthRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ActivateAuthRequest").msgclass
  ActivateAuthResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.ActivateAuthResponse").msgclass
  JobState = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.JobState").enummodule
  DatumState = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.DatumState").enummodule
  WorkerState = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.WorkerState").enummodule
  PipelineState = Google::Protobuf::DescriptorPool.generated_pool.lookup("pps.PipelineState").enummodule
end
end
